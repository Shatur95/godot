{
    "SCANNERS": [
        "<<non-serializable: Base>>"
    ],
    "CONFIGUREDIR": "#/.sconf_temp",
    "CONFIGURELOG": "#/config.log",
    "CPPSUFFIXES": [
        ".c",
        ".C",
        ".cxx",
        ".cpp",
        ".c++",
        ".cc",
        ".h",
        ".H",
        ".hxx",
        ".hpp",
        ".hh",
        ".F",
        ".fpp",
        ".FPP",
        ".m",
        ".mm",
        ".S",
        ".spp",
        ".SPP",
        ".sx"
    ],
    "DSUFFIXES": [
        ".d"
    ],
    "ENV": {
        "PATH": "/usr/local/bin:/opt/bin:/bin:/usr/bin:/opt/vulkan/1.2.148.1/x86_64:/home/andrea/.cargo/env:/home/andrea/.cargo/bin:/home/andrea/.local/bin:/home/andrea/bin:/usr/lib64/qt-3.3/bin:/usr/share/Modules/bin:/usr/local/sbin:/usr/sbin",
        "TERM": "xterm-256color",
        "PKG_CONFIG_PATH": "None"
    },
    "IDLSUFFIXES": [
        ".idl",
        ".IDL"
    ],
    "_concat": "<<non-serializable: function>>",
    "_defines": "<<non-serializable: function>>",
    "_stripixes": "<<non-serializable: function>>",
    "_LIBFLAGS": "${_stripixes(LIBLINKPREFIX, LIBS, LIBLINKSUFFIX, LIBPREFIXES, LIBSUFFIXES, __env__)}",
    "_LIBDIRFLAGS": "$( ${_concat(LIBDIRPREFIX, LIBPATH, LIBDIRSUFFIX, __env__, RDirs, TARGET, SOURCE)} $)",
    "_CPPINCFLAGS": "$( ${_concat(INCPREFIX, CPPPATH, INCSUFFIX, __env__, RDirs, TARGET, SOURCE)} $)",
    "_CPPDEFFLAGS": "${_defines(CPPDEFPREFIX, CPPDEFINES, CPPDEFSUFFIX, __env__)}",
    "__libversionflags": "<<non-serializable: function>>",
    "__SHLIBVERSIONFLAGS": "${__libversionflags(__env__,\"SHLIBVERSION\",\"_SHLIBVERSIONFLAGS\")}",
    "__LDMODULEVERSIONFLAGS": "${__libversionflags(__env__,\"LDMODULEVERSION\",\"_LDMODULEVERSIONFLAGS\")}",
    "__DSHLIBVERSIONFLAGS": "${__libversionflags(__env__,\"DSHLIBVERSION\",\"_DSHLIBVERSIONFLAGS\")}",
    "TEMPFILE": "<<non-serializable: type>>",
    "TEMPFILEARGJOIN": " ",
    "Dir": "<<non-serializable: Variable_Method_Caller>>",
    "Dirs": "<<non-serializable: Variable_Method_Caller>>",
    "File": "<<non-serializable: Variable_Method_Caller>>",
    "RDirs": "<<non-serializable: Variable_Method_Caller>>",
    "PLATFORM": "posix",
    "OBJPREFIX": "",
    "OBJSUFFIX": ".linuxbsd.tools.64.o",
    "SHOBJPREFIX": "$OBJPREFIX",
    "SHOBJSUFFIX": ".os",
    "PROGPREFIX": "",
    "PROGSUFFIX": ".linuxbsd.tools.64",
    "LIBPREFIX": "lib",
    "LIBSUFFIX": ".linuxbsd.tools.64.a",
    "SHLIBPREFIX": "$LIBPREFIX",
    "SHLIBSUFFIX": ".linuxbsd.tools.64.so",
    "LIBPREFIXES": [
        "$LIBPREFIX"
    ],
    "LIBSUFFIXES": [
        "$LIBSUFFIX",
        "$SHLIBSUFFIX",
        ".a",
        ".so"
    ],
    "PSPAWN": "<<non-serializable: function>>",
    "SPAWN": "<<non-serializable: function>>",
    "SHELL": "sh",
    "ESCAPE": "<<non-serializable: function>>",
    "TEMPFILEPREFIX": "@",
    "MAXLINELENGTH": 128072,
    "__RPATH": "$_RPATH",
    "__DRPATH": "$_DRPATH",
    "HOST_OS": null,
    "HOST_ARCH": null,
    "TARGET_OS": null,
    "TARGET_ARCH": null,
    "TOOLS": [
        "default",
        "gnulink",
        "gcc",
        "g++",
        "gfortran",
        "gas",
        "ar",
        "dmd",
        "m4",
        "filesystem",
        "jar",
        "javac",
        "rmic",
        "gs",
        "tar",
        "zip",
        "textfile"
    ],
    "WIXCANDLE": "candle.exe",
    "WIXLIGHT": "light.exe",
    "SHLINK": "$LINK",
    "SHLINKFLAGS": "<<non-serializable: CLVar>>",
    "SHLINKCOM": "$SHLINK -o $TARGET $SHLINKFLAGS $__SHLIBVERSIONFLAGS $__RPATH $SOURCES $_LIBDIRFLAGS $_LIBFLAGS",
    "SHLIBEMITTER": [
        "<<non-serializable: function>>"
    ],
    "SMARTLINK": "<<non-serializable: function>>",
    "LINK": "$SMARTLINK",
    "LINKFLAGS": [
        "-rdynamic",
        "-pipe",
        "-no-pie"
    ],
    "LINKCOM": "$LINK -o $TARGET $LINKFLAGS $__RPATH $SOURCES $_LIBDIRFLAGS $_LIBFLAGS",
    "LIBDIRPREFIX": "-L",
    "LIBDIRSUFFIX": "",
    "LIBLINKPREFIX": "-l",
    "LIBLINKSUFFIX": "",
    "LDMODULE": "$SHLINK",
    "LDMODULEEMITTER": [
        "<<non-serializable: function>>"
    ],
    "LDMODULEPREFIX": "$SHLIBPREFIX",
    "LDMODULESUFFIX": "$SHLIBSUFFIX",
    "LDMODULEFLAGS": "$SHLINKFLAGS",
    "LDMODULECOM": "$LDMODULE -o $TARGET $LDMODULEFLAGS $__LDMODULEVERSIONFLAGS $__RPATH $SOURCES $_LIBDIRFLAGS $_LIBFLAGS",
    "LDMODULEVERSION": "$SHLIBVERSION",
    "LDMODULENOVERSIONSYMLINKS": "$SHLIBNOVERSIONSYMLINKS",
    "RPATHPREFIX": "-Wl,-rpath=",
    "RPATHSUFFIX": "",
    "_RPATH": "${_concat(RPATHPREFIX, RPATH, RPATHSUFFIX, __env__)}",
    "_SHLIBVERSIONFLAGS": "$SHLIBVERSIONFLAGS -Wl,-soname=$_SHLIBSONAME",
    "_LDMODULEVERSIONFLAGS": "$LDMODULEVERSIONFLAGS -Wl,-soname=$_LDMODULESONAME",
    "_SHLIBSONAME": "${ShLibSonameGenerator(__env__,TARGET)}",
    "_LDMODULESONAME": "${LdModSonameGenerator(__env__,TARGET)}",
    "ShLibSonameGenerator": "<<non-serializable: _LibSonameGenerator>>",
    "LdModSonameGenerator": "<<non-serializable: _LibSonameGenerator>>",
    "LDMODULEVERSIONFLAGS": "$SHLIBVERSIONFLAGS",
    "LINKCALLBACKS": {
        "VersionedShLibSuffix": "<<non-serializable: function>>",
        "VersionedLdModSuffix": "<<non-serializable: function>>",
        "VersionedShLibSymlinks": "<<non-serializable: function>>",
        "VersionedLdModSymlinks": "<<non-serializable: function>>",
        "VersionedShLibName": "<<non-serializable: function>>",
        "VersionedLdModName": "<<non-serializable: function>>",
        "VersionedShLibSoname": "<<non-serializable: function>>",
        "VersionedLdModSoname": "<<non-serializable: function>>"
    },
    "SHLIBVERSIONFLAGS": "<<non-serializable: CLVar>>",
    "CC": "gcc",
    "_CCCOMCOM": "$CPPFLAGS $_CPPDEFFLAGS $_CPPINCFLAGS",
    "FRAMEWORKS": "<<non-serializable: CLVar>>",
    "FRAMEWORKPATH": "<<non-serializable: CLVar>>",
    "CCFLAGS": [
        "-g3",
        "-pipe",
        "-fpie",
        "-Wall",
        "-Wshadow-local",
        "-Wno-misleading-indentation",
        "-Werror=return-type"
    ],
    "SHCCFLAGS": "<<non-serializable: CLVar>>",
    "CFLAGS": [
        "-std=gnu11"
    ],
    "CCCOM": "$CC -o $TARGET -c $CFLAGS $CCFLAGS $_CCCOMCOM $SOURCES",
    "SHCC": "$CC",
    "SHCFLAGS": "<<non-serializable: CLVar>>",
    "SHCCCOM": "$SHCC -o $TARGET -c $SHCFLAGS $SHCCFLAGS $_CCCOMCOM $SOURCES",
    "CPPDEFPREFIX": "-D",
    "CPPDEFSUFFIX": "",
    "INCPREFIX": "-I",
    "INCSUFFIX": "",
    "STATIC_AND_SHARED_OBJECTS_ARE_THE_SAME": 0,
    "CFILESUFFIX": ".c",
    "CCVERSION": "10.2.1",
    "CXX": "g++",
    "CXXFLAGS": [
        "-std=gnu++17"
    ],
    "CXXCOM": "$CXX -o $TARGET -c $CXXFLAGS $CCFLAGS $_CCCOMCOM $SOURCES",
    "SHCXX": "$CXX",
    "SHCXXFLAGS": "<<non-serializable: CLVar>>",
    "SHCXXCOM": "$SHCXX -o $TARGET -c $SHCXXFLAGS $SHCCFLAGS $_CCCOMCOM $SOURCES",
    "CXXFILESUFFIX": ".cc",
    "CXXVERSION": "10.2.1",
    "FORTRANSUFFIXES": [
        ".f",
        ".for",
        ".ftn",
        ".fpp",
        ".FPP",
        ".F",
        ".FOR",
        ".FTN",
        ".f77",
        ".F77",
        ".f90",
        ".F90",
        ".f95",
        ".F95",
        ".f03",
        ".F03",
        ".f08",
        ".F08"
    ],
    "FORTRANFLAGS": "<<non-serializable: CLVar>>",
    "SHFORTRANFLAGS": "<<non-serializable: CLVar>>",
    "INCFORTRANPREFIX": "-I",
    "INCFORTRANSUFFIX": "",
    "_FORTRANINCFLAGS": "$( ${_concat(INCFORTRANPREFIX, FORTRANPATH, INCFORTRANSUFFIX, __env__, RDirs, TARGET, SOURCE)} $)",
    "FORTRANCOM": "$FORTRAN -o $TARGET -c $FORTRANFLAGS $_FORTRANINCFLAGS $_FORTRANMODFLAG $SOURCES",
    "FORTRANPPCOM": "$FORTRAN -o $TARGET -c $FORTRANFLAGS $CPPFLAGS $_CPPDEFFLAGS $_FORTRANINCFLAGS $_FORTRANMODFLAG $SOURCES",
    "SHFORTRANCOM": "$SHFORTRAN -o $TARGET -c $SHFORTRANFLAGS $_FORTRANINCFLAGS $_FORTRANMODFLAG $SOURCES",
    "SHFORTRANPPCOM": "$SHFORTRAN -o $TARGET -c $SHFORTRANFLAGS $CPPFLAGS $_CPPDEFFLAGS $_FORTRANINCFLAGS $_FORTRANMODFLAG $SOURCES",
    "FORTRANMODPREFIX": "",
    "FORTRANMODSUFFIX": ".mod",
    "FORTRANMODDIR": "",
    "FORTRANMODDIRPREFIX": "-J",
    "FORTRANMODDIRSUFFIX": "",
    "_FORTRANMODFLAG": "$( ${_concat(FORTRANMODDIRPREFIX, FORTRANMODDIR, FORTRANMODDIRSUFFIX, __env__, RDirs, TARGET, SOURCE)} $)",
    "F77FLAGS": "<<non-serializable: CLVar>>",
    "SHF77FLAGS": "<<non-serializable: CLVar>>",
    "INCF77PREFIX": "-I",
    "INCF77SUFFIX": "",
    "_F77INCFLAGS": "$( ${_concat(INCF77PREFIX, F77PATH, INCF77SUFFIX, __env__, RDirs, TARGET, SOURCE)} $)",
    "F77COM": "$F77 -o $TARGET -c $F77FLAGS $_F77INCFLAGS $SOURCES",
    "F77PPCOM": "$F77 -o $TARGET -c $F77FLAGS $CPPFLAGS $_CPPDEFFLAGS $_F77INCFLAGS $SOURCES",
    "SHF77COM": "$SHF77 -o $TARGET -c $SHF77FLAGS $_F77INCFLAGS $SOURCES",
    "SHF77PPCOM": "$SHF77 -o $TARGET -c $SHF77FLAGS $CPPFLAGS $_CPPDEFFLAGS $_F77INCFLAGS $SOURCES",
    "F90FLAGS": "<<non-serializable: CLVar>>",
    "SHF90FLAGS": "<<non-serializable: CLVar>>",
    "INCF90PREFIX": "-I",
    "INCF90SUFFIX": "",
    "_F90INCFLAGS": "$( ${_concat(INCF90PREFIX, F90PATH, INCF90SUFFIX, __env__, RDirs, TARGET, SOURCE)} $)",
    "F90COM": "$F90 -o $TARGET -c $F90FLAGS $_F90INCFLAGS $_FORTRANMODFLAG $SOURCES",
    "F90PPCOM": "$F90 -o $TARGET -c $F90FLAGS $CPPFLAGS $_CPPDEFFLAGS $_F90INCFLAGS $_FORTRANMODFLAG $SOURCES",
    "SHF90COM": "$SHF90 -o $TARGET -c $SHF90FLAGS $_F90INCFLAGS $_FORTRANMODFLAG $SOURCES",
    "SHF90PPCOM": "$SHF90 -o $TARGET -c $SHF90FLAGS $CPPFLAGS $_CPPDEFFLAGS $_F90INCFLAGS $_FORTRANMODFLAG $SOURCES",
    "F95FLAGS": "<<non-serializable: CLVar>>",
    "SHF95FLAGS": "<<non-serializable: CLVar>>",
    "INCF95PREFIX": "-I",
    "INCF95SUFFIX": "",
    "_F95INCFLAGS": "$( ${_concat(INCF95PREFIX, F95PATH, INCF95SUFFIX, __env__, RDirs, TARGET, SOURCE)} $)",
    "F95COM": "$F95 -o $TARGET -c $F95FLAGS $_F95INCFLAGS $_FORTRANMODFLAG $SOURCES",
    "F95PPCOM": "$F95 -o $TARGET -c $F95FLAGS $CPPFLAGS $_CPPDEFFLAGS $_F95INCFLAGS $_FORTRANMODFLAG $SOURCES",
    "SHF95COM": "$SHF95 -o $TARGET -c $SHF95FLAGS $_F95INCFLAGS $_FORTRANMODFLAG $SOURCES",
    "SHF95PPCOM": "$SHF95 -o $TARGET -c $SHF95FLAGS $CPPFLAGS $_CPPDEFFLAGS $_F95INCFLAGS $_FORTRANMODFLAG $SOURCES",
    "F03FLAGS": "<<non-serializable: CLVar>>",
    "SHF03FLAGS": "<<non-serializable: CLVar>>",
    "INCF03PREFIX": "-I",
    "INCF03SUFFIX": "",
    "_F03INCFLAGS": "$( ${_concat(INCF03PREFIX, F03PATH, INCF03SUFFIX, __env__, RDirs, TARGET, SOURCE)} $)",
    "F03COM": "$F03 -o $TARGET -c $F03FLAGS $_F03INCFLAGS $_FORTRANMODFLAG $SOURCES",
    "F03PPCOM": "$F03 -o $TARGET -c $F03FLAGS $CPPFLAGS $_CPPDEFFLAGS $_F03INCFLAGS $_FORTRANMODFLAG $SOURCES",
    "SHF03COM": "$SHF03 -o $TARGET -c $SHF03FLAGS $_F03INCFLAGS $_FORTRANMODFLAG $SOURCES",
    "SHF03PPCOM": "$SHF03 -o $TARGET -c $SHF03FLAGS $CPPFLAGS $_CPPDEFFLAGS $_F03INCFLAGS $_FORTRANMODFLAG $SOURCES",
    "F08FLAGS": "<<non-serializable: CLVar>>",
    "SHF08FLAGS": "<<non-serializable: CLVar>>",
    "INCF08PREFIX": "-I",
    "INCF08SUFFIX": "",
    "_F08INCFLAGS": "$( ${_concat(INCF08PREFIX, F08PATH, INCF08SUFFIX, __env__, RDirs, TARGET, SOURCE)} $)",
    "F08COM": "$F08 -o $TARGET -c $F08FLAGS $_F08INCFLAGS $_FORTRANMODFLAG $SOURCES",
    "F08PPCOM": "$F08 -o $TARGET -c $F08FLAGS $CPPFLAGS $_CPPDEFFLAGS $_F08INCFLAGS $_FORTRANMODFLAG $SOURCES",
    "SHF08COM": "$SHF08 -o $TARGET -c $SHF08FLAGS $_F08INCFLAGS $_FORTRANMODFLAG $SOURCES",
    "SHF08PPCOM": "$SHF08 -o $TARGET -c $SHF08FLAGS $CPPFLAGS $_CPPDEFFLAGS $_F08INCFLAGS $_FORTRANMODFLAG $SOURCES",
    "SHFORTRAN": "$FORTRAN",
    "FORTRAN": "gfortran",
    "F77": "gfortran",
    "SHF77": "$F77",
    "F90": "gfortran",
    "SHF90": "$F90",
    "F95": "gfortran",
    "SHF95": "$F95",
    "F03": "gfortran",
    "SHF03": "$F03",
    "F08": "gfortran",
    "SHF08": "$F08",
    "AS": "as",
    "ASFLAGS": "<<non-serializable: CLVar>>",
    "ASCOM": "$AS $ASFLAGS -o $TARGET $SOURCES",
    "ASPPFLAGS": "$ASFLAGS",
    "ASPPCOM": "$CC $ASPPFLAGS $CPPFLAGS $_CPPDEFFLAGS $_CPPINCFLAGS -c -o $TARGET $SOURCES",
    "AR": "ar",
    "ARFLAGS": "<<non-serializable: CLVar>>",
    "ARCOM": "$AR $ARFLAGS $TARGET $SOURCES",
    "RANLIB": "ranlib",
    "RANLIBFLAGS": "<<non-serializable: CLVar>>",
    "RANLIBCOM": "$RANLIB $RANLIBFLAGS $TARGET",
    "DC": "dmd",
    "DCOM": "$DC $_DINCFLAGS $_DVERFLAGS $_DDEBUGFLAGS $_DFLAGS -c -of$TARGET $SOURCES",
    "_DINCFLAGS": "${_concat(DINCPREFIX, DPATH, DINCSUFFIX, __env__, RDirs, TARGET, SOURCE)}",
    "_DVERFLAGS": "${_concat(DVERPREFIX, DVERSIONS, DVERSUFFIX, __env__)}",
    "_DDEBUGFLAGS": "${_concat(DDEBUGPREFIX, DDEBUG, DDEBUGSUFFIX, __env__)}",
    "_DFLAGS": "${_concat(DFLAGPREFIX, DFLAGS, DFLAGSUFFIX, __env__)}",
    "SHDC": "$DC",
    "SHDCOM": "$DC $_DINCFLAGS $_DVERFLAGS $_DDEBUGFLAGS $_DFLAGS -c -fPIC -of$TARGET $SOURCES",
    "DPATH": [
        "#/"
    ],
    "DFLAGS": [],
    "DVERSIONS": [],
    "DDEBUG": [],
    "DINCPREFIX": "-I",
    "DINCSUFFIX": "",
    "DVERPREFIX": "-version=",
    "DVERSUFFIX": "",
    "DDEBUGPREFIX": "-debug=",
    "DDEBUGSUFFIX": "",
    "DFLAGPREFIX": "-",
    "DFLAGSUFFIX": "",
    "DFILESUFFIX": ".d",
    "DLINK": "$DC",
    "DLINKFLAGS": "<<non-serializable: CLVar>>",
    "DLINKCOM": "$DLINK -of$TARGET $DLINKFLAGS $__DRPATH $SOURCES $_DLIBDIRFLAGS $_DLIBFLAGS",
    "SHDLINK": "$DC",
    "SHDLINKFLAGS": "<<non-serializable: CLVar>>",
    "SHDLINKCOM": "$DLINK -of$TARGET $SHDLINKFLAGS $__SHDLIBVERSIONFLAGS $__DRPATH $SOURCES $_DLIBDIRFLAGS $_DLIBFLAGS",
    "DLIBLINKPREFIX": "-L-l",
    "DLIBLINKSUFFIX": "",
    "_DLIBFLAGS": "${_stripixes(DLIBLINKPREFIX, LIBS, DLIBLINKSUFFIX, LIBPREFIXES, LIBSUFFIXES,  __env__)}",
    "DLIBDIRPREFIX": "-L-L",
    "DLIBDIRSUFFIX": "",
    "_DLIBDIRFLAGS": "${_concat(DLIBDIRPREFIX, LIBPATH, DLIBDIRSUFFIX, __env__, RDirs, TARGET, SOURCE)}",
    "DLIB": "ar cr",
    "DLIBCOM": "$DLIB $_DLIBFLAGS $TARGET $SOURCES $_DLIBFLAGS",
    "DLIBFLAGPREFIX": "-",
    "DLIBFLAGSUFFIX": "",
    "DRPATHPREFIX": "-L-rpath=",
    "DRPATHSUFFIX": "",
    "_DRPATH": "${_concat(DRPATHPREFIX, RPATH, DRPATHSUFFIX, __env__)}",
    "_SHDLIBVERSIONFLAGS": "$SHDLIBVERSIONFLAGS -L-soname=$_SHDLIBSONAME",
    "_SHDLIBSONAME": "${DShLibSonameGenerator(__env__,TARGET)}",
    "DShLibSonameGenerator": "<<non-serializable: _LibSonameGenerator>>",
    "SHDLIBVERSION": "$SHLIBVERSION",
    "SHDLIBVERSIONFLAGS": [],
    "M4": "m4",
    "M4FLAGS": "<<non-serializable: CLVar>>",
    "M4COM": "cd ${SOURCE.rsrcdir} && $M4 $M4FLAGS < ${SOURCE.file} > ${TARGET.abspath}",
    "COPYSTR": "Copy file(s): \"$SOURCES\" to \"$TARGETS\"",
    "JAVASUFFIX": ".java",
    "JAR": "jar",
    "JARFLAGS": "<<non-serializable: CLVar>>",
    "_JARFLAGS": "<<non-serializable: function>>",
    "_JARMANIFEST": "<<non-serializable: function>>",
    "_JARSOURCES": "<<non-serializable: function>>",
    "_JARCOM": "$JAR $_JARFLAGS $TARGET $_JARMANIFEST $_JARSOURCES",
    "JARCOM": "${TEMPFILE('$_JARCOM','$JARCOMSTR')}",
    "JARSUFFIX": ".jar",
    "JAVAINCLUDES": [],
    "JAVAC": "javac",
    "JAVACFLAGS": "<<non-serializable: CLVar>>",
    "JAVABOOTCLASSPATH": [],
    "JAVACLASSPATH": [],
    "JAVASOURCEPATH": [],
    "_javapathopt": "<<non-serializable: type>>",
    "_JAVABOOTCLASSPATH": "${_javapathopt(\"-bootclasspath\", \"JAVABOOTCLASSPATH\")} ",
    "_JAVACLASSPATH": "${_javapathopt(\"-classpath\", \"JAVACLASSPATH\")} ",
    "_JAVASOURCEPATH": "${_javapathopt(\"-sourcepath\", \"JAVASOURCEPATH\", \"_JAVASOURCEPATHDEFAULT\")} ",
    "_JAVASOURCEPATHDEFAULT": "${TARGET.attributes.java_sourcedir}",
    "_JAVACCOM": "$JAVAC $JAVACFLAGS $_JAVABOOTCLASSPATH $_JAVACLASSPATH -d ${TARGET.attributes.java_classdir} $_JAVASOURCEPATH $SOURCES",
    "JAVACCOM": "${TEMPFILE('$_JAVACCOM','$JAVACCOMSTR')}",
    "JAVACLASSSUFFIX": ".class",
    "RMIC": "rmic",
    "RMICFLAGS": "<<non-serializable: CLVar>>",
    "RMICCOM": "$RMIC $RMICFLAGS -d ${TARGET.attributes.java_lookupdir} -classpath ${SOURCE.attributes.java_classdir} ${SOURCES.attributes.java_classname}",
    "PDFPREFIX": "",
    "PDFSUFFIX": ".pdf",
    "GS": "gs",
    "GSFLAGS": "<<non-serializable: CLVar>>",
    "GSCOM": "$GS $GSFLAGS -sOutputFile=$TARGET $SOURCES",
    "TAR": "tar",
    "TARFLAGS": "<<non-serializable: CLVar>>",
    "TARCOM": "$TAR $TARFLAGS -f $TARGET $SOURCES",
    "TARSUFFIX": ".tar",
    "ZIP": "zip",
    "ZIPFLAGS": "<<non-serializable: CLVar>>",
    "ZIPCOM": "<<non-serializable: FunctionAction>>",
    "ZIPCOMPRESSION": 8,
    "ZIPSUFFIX": ".zip",
    "ZIPROOT": "<<non-serializable: CLVar>>",
    "LINESEPARATOR": "\n",
    "TEXTFILEPREFIX": "",
    "TEXTFILESUFFIX": ".txt",
    "SUBSTFILEPREFIX": "",
    "SUBSTFILESUFFIX": "",
    "x86_libtheora_opt_gcc": true,
    "x86_libtheora_opt_vc": false,
    "arch": "",
    "bits": "64",
    "p": "linuxbsd",
    "platform": "linuxbsd",
    "target": "debug",
    "optimize": "speed",
    "tools": true,
    "tests": false,
    "use_lto": false,
    "use_precise_math_checks": false,
    "deprecated": true,
    "minizip": true,
    "xaudio2": false,
    "custom_modules": "",
    "verbose": false,
    "progress": true,
    "warnings": "all",
    "werror": false,
    "dev": false,
    "extra_suffix": "",
    "vsproj": false,
    "macports_clang": "no",
    "disable_3d": false,
    "disable_advanced_gui": false,
    "no_editor_splash": false,
    "system_certs_path": "",
    "builtin_bullet": true,
    "builtin_certs": true,
    "builtin_enet": true,
    "builtin_freetype": true,
    "builtin_glslang": true,
    "builtin_libogg": true,
    "builtin_libpng": true,
    "builtin_libtheora": true,
    "builtin_libvorbis": true,
    "builtin_libvpx": true,
    "builtin_libwebp": true,
    "builtin_wslay": true,
    "builtin_mbedtls": true,
    "builtin_miniupnpc": true,
    "builtin_opus": true,
    "builtin_pcre2": true,
    "builtin_pcre2_with_jit": true,
    "builtin_recast": true,
    "builtin_rvo2": true,
    "builtin_squish": true,
    "builtin_vulkan": true,
    "builtin_xatlas": true,
    "builtin_zlib": true,
    "builtin_zstd": true,
    "use_llvm": false,
    "use_lld": false,
    "use_thinlto": false,
    "use_static_cpp": false,
    "use_coverage": false,
    "use_ubsan": false,
    "use_asan": false,
    "use_lsan": false,
    "use_tsan": false,
    "pulseaudio": true,
    "udev": false,
    "debug_symbols": "yes",
    "separate_debug_symbols": false,
    "touch": true,
    "execinfo": false,
    "mingw_prefix_32": "i686-w64-mingw32-",
    "mingw_prefix_64": "x86_64-w64-mingw32-",
    "target_win_version": "0x0601",
    "windows_subsystem": "default",
    "use_mingw": false,
    "module_arkit_enabled": true,
    "module_assimp_enabled": true,
    "module_basis_universal_enabled": true,
    "module_bmp_enabled": true,
    "module_bullet_enabled": true,
    "module_camera_enabled": true,
    "module_camera_iphone_enabled": true,
    "module_csg_enabled": true,
    "module_cvtt_enabled": true,
    "module_dds_enabled": true,
    "module_denoise_enabled": true,
    "module_enet_enabled": true,
    "module_etc_enabled": true,
    "module_freetype_enabled": true,
    "module_gamecenter_enabled": true,
    "module_gdnative_enabled": true,
    "module_gdnavigation_enabled": true,
    "module_gdscript_enabled": true,
    "module_glslang_enabled": true,
    "module_gridmap_enabled": true,
    "module_hdr_enabled": true,
    "module_icloud_enabled": true,
    "module_inappstore_enabled": true,
    "module_jpg_enabled": true,
    "module_jsonrpc_enabled": true,
    "module_lightmapper_rd_enabled": true,
    "module_mbedtls_enabled": true,
    "module_mobile_vr_enabled": true,
    "module_mono_enabled": false,
    "module_ogg_enabled": true,
    "module_opensimplex_enabled": true,
    "module_opus_enabled": true,
    "module_pvr_enabled": true,
    "module_regex_enabled": true,
    "module_squish_enabled": true,
    "module_stb_vorbis_enabled": true,
    "module_svg_enabled": true,
    "module_tga_enabled": true,
    "module_theora_enabled": true,
    "module_tinyexr_enabled": true,
    "module_upnp_enabled": true,
    "module_vhacd_enabled": true,
    "module_visual_script_enabled": true,
    "module_vorbis_enabled": true,
    "module_webm_enabled": true,
    "module_webp_enabled": true,
    "module_webrtc_enabled": true,
    "module_websocket_enabled": true,
    "module_xatlas_unwrap_enabled": true,
    "CPPPATH": [
        "#thirdparty/freetype//include",
        "#thirdparty/libpng/",
        "#thirdparty/vulkan",
        "#thirdparty/vulkan/include",
        "#thirdparty/vulkan/loader",
        "#thirdparty/zstd/",
        "#thirdparty/zlib/",
        "#platform/linuxbsd",
        "#"
    ],
    "CPPDEFINES": [
        [
            "DEBUG_ENABLED"
        ],
        [
            "DEBUG_MEMORY_ALLOC"
        ],
        [
            "DISABLE_FORCED_INLINE"
        ],
        [
            "TOUCH_ENABLED"
        ],
        [
            "ALSA_ENABLED"
        ],
        [
            "ALSAMIDI_ENABLED"
        ],
        [
            "PULSEAUDIO_ENABLED"
        ],
        [
            "_REENTRANT"
        ],
        [
            "JOYDEV_ENABLED"
        ],
        [
            "X11_ENABLED"
        ],
        [
            "UNIX_ENABLED"
        ],
        [
            "VULKAN_ENABLED"
        ],
        [
            "PTRCALL_ENABLED"
        ],
        [
            "TOOLS_ENABLED"
        ],
        [
            "MINIZIP_ENABLED"
        ],
        [
            "ZSTD_STATIC_LINKING_ONLY"
        ],
        [
            "HAVE_MNTENT"
        ]
    ],
    "BUILDERS": "<<non-serializable: BuilderDict>>",
    "LIBS": [
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "<<non-serializable: NodeList>>",
        "Xcursor",
        "Xinerama",
        "Xext",
        "Xrandr",
        "Xrender",
        "X11",
        "Xi",
        "asound",
        "pulse",
        "GL",
        "pthread",
        "dl"
    ],
    "CXXCOMSTR": [
        "\u001b[94mCompiling \u001b[95m==> \u001b[93m$SOURCE\u001b[0m"
    ],
    "CCCOMSTR": [
        "\u001b[94mCompiling \u001b[95m==> \u001b[93m$SOURCE\u001b[0m"
    ],
    "SHCCCOMSTR": [
        "\u001b[94mCompiling shared \u001b[95m==> \u001b[93m$SOURCE\u001b[0m"
    ],
    "SHCXXCOMSTR": [
        "\u001b[94mCompiling shared \u001b[95m==> \u001b[93m$SOURCE\u001b[0m"
    ],
    "ARCOMSTR": [
        "\u001b[91mLinking Static Library \u001b[95m==> \u001b[93m$TARGET\u001b[0m"
    ],
    "RANLIBCOMSTR": [
        "\u001b[91mRanlib Library         \u001b[95m==> \u001b[93m$TARGET\u001b[0m"
    ],
    "SHLINKCOMSTR": [
        "\u001b[91mLinking Shared Library \u001b[95m==> \u001b[93m$TARGET\u001b[0m"
    ],
    "LINKCOMSTR": [
        "\u001b[91mLinking Program        \u001b[95m==> \u001b[93m$TARGET\u001b[0m"
    ],
    "JARCOMSTR": [
        "\u001b[91mCreating Java Archive  \u001b[95m==> \u001b[93m$TARGET\u001b[0m"
    ],
    "JAVACCOMSTR": [
        "\u001b[94mCompiling \u001b[95m==> \u001b[93m$SOURCE\u001b[0m"
    ],
    "check_c_headers": [
        [
            "mntent.h",
            "HAVE_MNTENT"
        ]
    ]
}